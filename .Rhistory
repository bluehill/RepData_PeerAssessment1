library("knitr", lib.loc="C:/Users/Blue Hill Escape/Documents/R/win-library/3.1")
library(datasets)
data(airquality)
summary(airquality)
# Inline Text computations
```
install.packages("xtable")
getwd()
setwd("C:/Users/Blue Hill Escape/Documents/Gihub/")
setwd("C:/Users/Blue Hill Escape/Documents/Github/")
data=read.csv("activity/activity.csv")
data=read.csv("/activity/activity.csv")
getwd()
setwd("C:/Users/Blue Hill Escape/Documents/Github/RedData_PeerAssessment1")
setwd("C:/Users/Blue Hill Escape/Documents/Github/RepData_PeerAssessment1")
data=read.csv("/activity/activity.csv")
data=read.csv("activity/activity.csv")
tail(data$interval)
data$datef=as.Date(as.character(data$date), %Y-%m-%d)
data$datef=as.Date(as.character(data$date), "%Y-%m-%d")
head(data)
data=na.omit(read.csv("activity/activity.csv"))
data$datef=as.Date(as.character(data$date), "%Y-%m-%d")
head(data)
sapply(split(data, data$date), mean)
sapply(split(data$steps, data$date), mean)
summary(data$steps)
by(sapply(split(data$steps, data$date), sum), mean)
mean(data$steps)
median(data$steps)
tapply(data$steps, data$date, sum)
x=tapply(data$steps, data$date, sum)
head(x)
str(x)
x=data.frame(tapply(data$steps, data$date, sum))
str(x)
head(x)
mean(x[ ,2])
colmean(x)
colMeans(x)
x=data.frame(na.omit(tapply(data$steps, data$date, sum)))
y=na.omit(x)
colMeans(y)
hist(y)
hist(y[,2])
hist(y[2])
hist(y[,1])
colMeans(y)
colnames(y)<-c("data", "Tsteps")
colnames(y)<-c("Tsteps")
colMeans(y)
median(y)
y=as.numeric(y)
y=as.numeric(as.character(y))
x=data.frame(tapply(data$steps, data$date, sum))
y=na.omit(x)
colnames(y)<-c("Tsteps")
colMeans(y)
x=as.data.frame(tapply(data$steps, data$date, sum))
x=as.data.frame(unlist(tapply(data$steps, data$date, sum)))
x=as.data.frame(matrix(unlist(tapply(data$steps, data$date, sum)), nrow=61, byrow=T)
)
x=as.data.frame(unlist(tapply(data$steps, data$date, sum)))
x=data.frame(unlist(tapply(data$steps, data$date, sum)))
x= tapply(data$steps, data$date, sum)
x
head(x)
str(x)
data=na.omit(read.csv("activity/activity.csv"))
data$datef=as.Date(as.character(data$date), "%Y-%m-%d")
x= tapply(data$steps, data$date, sum)
head(x)
a=sapply(split(data$steps, data$date), sum)
str(a)
hist(a)
mean(a)
median(a)
mean(a)
median(a)
data=na.omit(read.csv("activity/activity.csv"))
data$datef=as.Date(as.character(data$date), "%Y-%m-%d")
a=sapply(split(data$steps, data$date), sum)
Daily_steps=sapply(split(data$steps, data$date), sum)
mean(Daily_steps)
median(Daily_steps)
hist(Daily_steps)
data=read.csv("activity/activity.csv")
data$datef=as.Date(as.character(data$date), "%Y-%m-%d")
Daily_steps=sapply(split(data$steps, data$date), sum)
mean(Daily_steps)
Daily_steps=na.omit(sapply(split(data$steps, data$date), sum))
mean(Daily_steps)
median(Daily_steps)
hist(Daily_steps)
sapply(split(data$interval, data$date), max)
timeseries=sapply(split(data$steps, data$interval), mean)
summary(timeseries)
timeseries=na.omit(sapply(split(data$steps, data$interval), mean))
summary(timeseries)
datanona=na.omit(data)
timeseries=sapply(split(datanona$steps, datanona$interval), mean)
summary(timeseries)
head(timeseries)
plot(timeseries)
plot(timeseries, type=l)
plot(timeseries, type="l")
plot(timeseries, type="l", ylab="mean number of steps")
plot(timeseries, type="l", ylab="mean number of steps", xlab="")
max(timeseries)
name(max(timeseries))
names(max(timeseries))
names(head(timeseries))
names(timeseries[])
names(timeseries[1, ])
names(timeseries[1])
max(timeseries)
names(timeseries[1]==max(timeseries))
names(timeseries[]==max(timeseries))
x=data.frame(as.list(timeseries))
head(x)
max=max(timeseries)
x[]==max
for(i in nrows(x){if x[i]==max{b=x[i]}}
for(i in nrows(x){if (x[i]==max){b=x[i]}}
for(i in 1:nrows(x)){if (x[i]==max){b=x[i]}}
for(i in 1:nrow(x)){if (x[i]==max){b=x[i]}}
print(b)
max=max(timeseries)
x=data.frame(as.list(timeseries))
for(i in 1:nrow(x)){if (x[i]==max){b=x[i]}}
print(b)
x[2]
x[2]>0
nrow(x)
for(i in 1:length(x)){if (x[i]==max){b=x[i]}}
length(x)
x[288]
max
b=0
for(i in 1:length(x)){if (x[i]==max){b=x[i]}}
print(b)
names(b)
for(i in 1:length(timeseries)){if (timeseries[i]==max){b=timeseries[i]}}
print(b)
names(b)
max=max(timeseries)
b=0
for(i in 1:length(timeseries)){if (timeseries[i]==max){b=timeseries[i]}}
names(b)
mean(is.na(data))
mean(is.na(data$date))
mean(is.na(data$datef))
mean(is.na(data$steps))
mean(is.na(data$interval))
sum(is.na(data))
head(timeseries)
tail(timeseries)
data$steps[2]
is.na(data$steps[i])
data$interval[2]
intervals=names(timeseries)
head(intervals)
means=as.numeric(timeseries)
reference=data.frame(intervals, means)
interval=data$interval[5]
test=reference$means[reference$intervals==interval]
nrow(data)
for(i in 1:nrow(data)){
if(is.na(data$steps[i])){
interval=data$interval[i]
replace=reference$means[reference$intervals==interval]
data$steps[i]=replace
}
}
newdata=data.frame(data$steps, data$date, data$interval)
hist(newdata$steps)
hist(newdata$data.steps)
sum(is.na(data$steps))
new_Daily_steps = sapply(split(newdata$data.steps, newdata$data.date), sum)
hist(newdata$data.steps)
new_Daily_steps = sapply(split(newdata$data.steps, newdata$data.date), sum)
hist(new_Daily_steps)
mean(new_Daily_steps)
median(Daily_steps)
newdata=data.frame(data$steps, data$datef, data$interval)
weekdays(data$date[1])
weekdays(data$datef[1])
?colnames
colnames(newdata)=c("steps", "date", "interval")
nrow(newdata)
weekend=c("Saturday", "Sunday")
weekend=c("Saturday", "Sunday")
for (i in 1:nrow(newdata)){
newdata$days=weekdays(newdata$date[i])
if(newdata$days[i] %in% weekend){
newdata$weekday[i]="Weekend"
}else
{newdata$weekday[i]="Weekday"}
}
unique(newdata$weekday)
newdata$weekday=as.factor(newdata$weekday)
library(ggplot2)
ggplot(data=newdata, aes(x=interval, y=steps, group=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend")
ggplot(data=newdata, aes(x=interval, y=steps, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend")
ggplot(data=newdata, aes(x=interval, y=steps, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") facet_grid(. ~ group=weekday)
ggplot(data=newdata, aes(x=interval, y=steps, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") + facet_grid(. ~ group=weekday)
ggplot(data=newdata, aes(x=interval, y=steps, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") + facet_grid(. ~ weekday)
weekdays=subset(newdata, newdata$weekday=="weekday")
weekends=subset(newdata, newdata$weekday=="weekend")
weekdays=subset(newdata, newdata$weekday=="Weekday")
weekends=subset(newdata, newdata$weekday=="Weekend")
timeseries1=sapply(split(weekdays$steps, weekdays$interval), mean)
timeseries2=sapply(split(weekends$steps, weekends$interval), mean)
weekday=c(rep("Weekday", length(timeseries1)), rep("Weekend", length(timeseries2)))
intervals=names(timeseries1, timeseries2)
intervals=c(names(timeseries1), names(timeseries2))
means=as.numeric(timeseries1, timeseries2)
means=c(as.numeric(timeseries1), as.numeric(timeseries2))
reference=data.frame(intervals, means, weekday)
head(timeseries1)
names(timeseries1, 10)
names(timeseries1[1:10])
ggplot(data=reference, aes(x=intervals, y=means, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") + facet_grid(. ~ weekday)
intervals=c(names(timeseries1), names(timeseries2))
means=c(as.numeric(timeseries1), as.numeric(timeseries2))
weekday=c(rep("Weekday", length(timeseries1)), rep("Weekend", length(timeseries2)))
reference=data.frame(intervals, means, weekday)
ggplot(data=reference, aes(x=intervals, y=means, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") + facet_grid(. ~ weekday)
str(intervals)
head(reference$intervals)
intervals=as.factor(c(names(timeseries1), names(timeseries2)))
reference=data.frame(intervals, means, weekday)
ggplot(data=reference, aes(x=intervals, y=means, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") + facet_grid(. ~ weekday)
intervals=c(names(timeseries1), names(timeseries2))
intervals=c(names(timeseries1), names(timeseries2))
reference=data.frame(intervals, means, weekday)
reference$intervals=as.character(reference$intervals)
ggplot(data=reference, aes(x=intervals, y=means, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") + facet_grid(. ~ weekday)
hist(new_Daily_steps)
mean(new_Daily_steps)
median(new_Daily_steps)
weekdays=subset(newdata, newdata$weekday=="Weekday")
weekends=subset(newdata, newdata$weekday=="Weekend")
timeseries1=sapply(split(weekdays$steps, weekdays$interval), mean)
timeseries2=sapply(split(weekends$steps, weekends$interval), mean)
intervals=rbind(timeseries1, timeseries2)
head(intervals)
intervals=as.numeric(rbind(timeseries1, timeseries2))
intervals=rbind(timeseries1, timeseries2)
inames=names(intervals)
intervals=c(names(timeseries1), names(timeseries2))
head(intervals)
str(intervals)
intervals=as.factor(as.numeric(intervals))
str(intervals)
head(intervals)
intervals=c(names(timeseries1), names(timeseries2))
intervals=as.factor(intervals)
head(intervals)
intervals=c(names(timeseries1), names(timeseries2))
intervals=as.factor(as.numeric(intervals))
means=c(as.numeric(timeseries1), as.numeric(timeseries2))
means=c(as.numeric(timeseries1), as.numeric(timeseries2))
weekday=c(rep("Weekday", length(timeseries1)), rep("Weekend", length(timeseries2)))
reference=data.frame(intervals, means, weekday)
weekdays=subset(newdata, newdata$weekday=="Weekday")
weekends=subset(newdata, newdata$weekday=="Weekend")
timeseries1=sapply(split(weekdays$steps, weekdays$interval), mean)
timeseries2=sapply(split(weekends$steps, weekends$interval), mean)
intervals=c(names(timeseries1), names(timeseries2))
intervals=as.factor(as.numeric(intervals))
means=c(as.numeric(timeseries1), as.numeric(timeseries2))
weekday=c(rep("Weekday", length(timeseries1)), rep("Weekend", length(timeseries2)))
reference=data.frame(intervals, means, weekday)
reference$intervals=as.character(reference$intervals)
ggplot(data=reference, aes(x=intervals, y=means, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") + facet_grid(. ~ weekday)
plot(means, intervals, type="l")
plot(intervals, means, type="l")
intervals=c(names(timeseries1), names(timeseries2))
plot(intervals, means, type="l")
reference=data.frame(intervals, means, weekday)
reference=data.frame(as.numeric(intervals), means, weekday)
ggplot(data=reference, aes(x=intervals, y=means, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") + facet_grid(. ~ weekday)
ggplot(data=reference, aes(x=as.numeric.intervals, y=means, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") + facet_grid(. ~ weekday)
str(reference)
reference=data.frame(as.numeric(intervals), means, weekday)
ggplot(data=reference, aes(x=as.numeric.intervals., y=means, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") + facet_grid(. ~ weekday)
weekdays=subset(newdata, newdata$weekday=="Weekday")
weekends=subset(newdata, newdata$weekday=="Weekend")
timeseries1=sapply(split(weekdays$steps, weekdays$interval), mean)
timeseries2=sapply(split(weekends$steps, weekends$interval), mean)
intervals=c(names(timeseries1), names(timeseries2))
means=c(as.numeric(timeseries1), as.numeric(timeseries2))
weekday=c(rep("Weekday", length(timeseries1)), rep("Weekend", length(timeseries2)))
reference=data.frame(as.numeric(intervals), means, weekday)
ggplot(data=reference, aes(x=as.numeric.intervals., y=means, group=weekday, colour=weekday)) + geom_line() + labs(title="Number of steps through the day by weekday and weekend") + facet_grid(. ~ weekday)
